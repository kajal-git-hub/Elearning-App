type Auth {
  accessToken: String!

  refreshToken: String!

  user: User!
}

input CreateCustomerInput {
  countryCode: String

  email: String

  mobileNumber: String

  name: String!
}

type Customer {
  countryCode: String

  createdAt: DateTime!

  deletedAt: DateTime!

  email: String

  id: ID!

  mobileNumber: String

  name: String!

  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetOtpInput {
  countryCode: String!

  mobileNumber: String!
}

type Mutation {
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!

  getNewTokens: Auth!

  getOtp(getOtpInput: GetOtpInput!): Boolean!

  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!

  updateUser(updateUserInput: UpdateUserInput!): User!

  verifyOtp(verifyOtpInput: VerifyOtpInput!): Auth!
}

type Query {
  getMyDetails: User!

  sayHello: String!
}

input UpdateCustomerInput {
  countryCode: String

  email: String

  id: ID!

  mobileNumber: String

  name: String
}

input UpdateUserInput {
  city: String

  fullName: String

  preparingFor: String

  reference: String

  targetYear: Int
}

type User {
  countryCode: String!

  createdAt: DateTime!

  deletedAt: DateTime!

  fullName: String

  id: ID!

  mobileNumber: String!

  updatedAt: DateTime!

  userInformation: UserInformation!
}

type UserInformation {
  city: String

  createdAt: DateTime!

  deletedAt: DateTime!

  id: ID!

  preparingFor: String

  reference: String

  targetYear: Int

  updatedAt: DateTime!
}

input VerifyOtpInput {
  countryCode: String!

  mobileNumber: String!

  otp: Int!
}

schema {
  query: Query
  mutation: Mutation
}
